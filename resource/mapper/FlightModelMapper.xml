<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.integration.dao.FlightModelMapper">
  <resultMap id="BaseResultMap" type="com.integration.entity.FlightModel">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="zoom" jdbcType="DOUBLE" property="zoom" />
    <result column="width" jdbcType="DOUBLE" property="width" />
    <result column="speed" jdbcType="DOUBLE" property="speed" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="name" jdbcType="NVARCHAR" property="name" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.integration.entity.FlightModel">
    <result column="points" jdbcType="LONGVARCHAR" property="points" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, zoom, width, speed, time, name
  </sql>
  <sql id="Blob_Column_List">
    points
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.integration.entity.FlightModelExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from flightModel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.integration.entity.FlightModelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from flightModel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.integration.entity.FlightModelExample">
    delete from flightModel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.integration.entity.FlightModel">
    insert into flightModel (id, zoom, width, 
      speed, time, name, 
      points)
    values (#{id,jdbcType=VARCHAR}, #{zoom,jdbcType=DOUBLE}, #{width,jdbcType=DOUBLE}, 
      #{speed,jdbcType=DOUBLE}, #{time,jdbcType=TIMESTAMP}, #{name,jdbcType=NVARCHAR}, 
      #{points,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.integration.entity.FlightModel">
    insert into flightModel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="zoom != null">
        zoom,
      </if>
      <if test="width != null">
        width,
      </if>
      <if test="speed != null">
        speed,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="points != null">
        points,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="zoom != null">
        #{zoom,jdbcType=DOUBLE},
      </if>
      <if test="width != null">
        #{width,jdbcType=DOUBLE},
      </if>
      <if test="speed != null">
        #{speed,jdbcType=DOUBLE},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=NVARCHAR},
      </if>
      <if test="points != null">
        #{points,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.integration.entity.FlightModelExample" resultType="java.lang.Long">
    select count(*) from flightModel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update flightModel
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.zoom != null">
        zoom = #{record.zoom,jdbcType=DOUBLE},
      </if>
      <if test="record.width != null">
        width = #{record.width,jdbcType=DOUBLE},
      </if>
      <if test="record.speed != null">
        speed = #{record.speed,jdbcType=DOUBLE},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=NVARCHAR},
      </if>
      <if test="record.points != null">
        points = #{record.points,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update flightModel
    set id = #{record.id,jdbcType=VARCHAR},
      zoom = #{record.zoom,jdbcType=DOUBLE},
      width = #{record.width,jdbcType=DOUBLE},
      speed = #{record.speed,jdbcType=DOUBLE},
      time = #{record.time,jdbcType=TIMESTAMP},
      name = #{record.name,jdbcType=NVARCHAR},
      points = #{record.points,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update flightModel
    set id = #{record.id,jdbcType=VARCHAR},
      zoom = #{record.zoom,jdbcType=DOUBLE},
      width = #{record.width,jdbcType=DOUBLE},
      speed = #{record.speed,jdbcType=DOUBLE},
      time = #{record.time,jdbcType=TIMESTAMP},
      name = #{record.name,jdbcType=NVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>